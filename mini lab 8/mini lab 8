for idx, (model_name, result) in enumerate(model_results.items(), 1):
    ax = plt.subplot(1, 3, idx)


    ax.scatter(x_values, noisy_observations,
               color=plot_colors['observations'],
               s=15, alpha=0.6, label='Зашумленные данные')


    ax.plot(x_values, true_function,
            color=plot_colors['true_function'],
            linewidth=2.5, label='Истинная функция')

  
    ax.plot(x_values, result["predictions"],
            color=plot_colors['predictions'],
            linewidth=2, linestyle='--',
            label='Предсказание модели')

  
    ax.set_title(f'{model_name}\nMSE: {result["MSE"]:.4f}', pad=15)
    ax.set_xlabel('Входные значения (x)', fontsize=10)
    ax.set_ylabel('Целевые значения (y)', fontsize=10)
    ax.legend(fontsize=9)
    ax.grid(True, linestyle=':', alpha=0.7)

    
    ax.annotate(f'MSE = {result["MSE"]:.4f}',
                xy=(0.05, 0.85), xycoords='axes fraction',
                bbox=dict(boxstyle='round', fc='white', ec='gray', alpha=0.8))

plt.tight_layout(pad=3.0)
plt.show()

print("\nСравнение моделей регрессии:")
print("-" * 50)
for model_name, result in model_results.items():
    print(f"{model_name:25} | MSE: {result['MSE']:.6f}")
print("-" * 50)
